<!DOCTYPE html>
<html>
<head>
  <title>Trayo Admin</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
  <%= stylesheet_link_tag "admin", "data-turbo-track": "reload" %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <%= javascript_importmap_tags %>
</head>
<body class="dark-mode">
  <script>
    (function() {
      // Activer le mode sombre par défaut
      document.body.classList.add('dark-mode');
      localStorage.setItem('theme', 'dark');
      
      // Debug: Check FontAwesome loading
      console.log('=== FONTAWESOME DEBUG ===');
      console.log('FontAwesome CSS loaded:', document.querySelector('link[href*="font-awesome"]') !== null);
      
      // Test FontAwesome classes
      const testIcon = document.createElement('i');
      testIcon.className = 'fa-solid fa-home';
      document.body.appendChild(testIcon);
      
      const computedStyle = window.getComputedStyle(testIcon);
      console.log('FontAwesome font-family:', computedStyle.fontFamily);
      console.log('FontAwesome font-weight:', computedStyle.fontWeight);
      
      document.body.removeChild(testIcon);
      console.log('=== END FONTAWESOME DEBUG ===');
    })();
  </script>
  
  <%= render 'admin/shared/navbar' %>
  <%= render 'admin/shared/sidebar' %>
  
  <div class="main-content">
    <%= yield %>
  </div>

  <!-- Dropdown JavaScript -->
  <script>
    // Gestionnaire de dropdowns personnalisé
    document.addEventListener('DOMContentLoaded', function() {
      initializeDropdowns();
    });
    
    document.addEventListener('turbo:load', function() {
      initializeDropdowns();
    });
    
    document.addEventListener('turbo:render', function() {
      initializeDropdowns();
    });
    
    function initializeDropdowns() {
      // Fermer tous les dropdowns ouverts
      document.querySelectorAll('.dropdown.active').forEach(dropdown => {
        dropdown.classList.remove('active');
      });
      
      // Ajouter les event listeners aux dropdowns
      document.querySelectorAll('.dropdown-toggle').forEach(toggle => {
        toggle.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const dropdown = this.closest('.dropdown');
          const isActive = dropdown.classList.contains('active');
          
          // Fermer tous les autres dropdowns
          document.querySelectorAll('.dropdown.active').forEach(activeDropdown => {
            if (activeDropdown !== dropdown) {
              activeDropdown.classList.remove('active');
            }
          });
          
          // Toggle le dropdown actuel
          dropdown.classList.toggle('active', !isActive);
        });
      });
      
      // Fermer les dropdowns quand on clique ailleurs
      document.addEventListener('click', function(e) {
        if (!e.target.closest('.dropdown')) {
          document.querySelectorAll('.dropdown.active').forEach(dropdown => {
            dropdown.classList.remove('active');
          });
        }
      });
      
      // Gérer les touches clavier
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          document.querySelectorAll('.dropdown.active').forEach(dropdown => {
            dropdown.classList.remove('active');
          });
        }
      });
    }
  </script>
</body>
</html>

